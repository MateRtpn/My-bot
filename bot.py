import os
import discord
from discord.ext import commands
from dotenv import load_dotenv

from myserver import server_on

load_dotenv()


CHANNEL_ID = os.getenv('CHANNEL_ID')
ADMIN_ROLE = os.getenv('ADMIN_ROLE')
OWNER_ROLE = os.getenv('OWNER_ROLE')


CHANNEL_ID = int(CHANNEL_ID)
ADMIN_ROLE = int(ADMIN_ROLE)
OWNER_ROLE = int(OWNER_ROLE)


TOKEN = os.getenv('DISCORD_TOKEN')

if not TOKEN or not CHANNEL_ID or not ADMIN_ROLE or not OWNER_ROLE:
    print("Error: TOKEN, CHANNEL_ID, ADMIN_ROLE, or OWNER_ROLE is not set in .env")
    exit(1)


intents = discord.Intents.default()
intents.guilds = True
intents.messages = True
intents.message_content = True
intents.members = True

# ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
bot = commands.Bot(command_prefix='/', intents=intents)

# ‡πÄ‡πÄ‡∏à‡πâ‡∏á‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå
@bot.event
async def on_ready():
    print('Moxz onlineüî•')
    try:
        channel = bot.get_channel(int(CHANNEL_ID))
        if channel:
            await channel.send("Moxz Onlineüî•")
            print(f"Successfully connected to channel: {CHANNEL_ID}")
            await bot.tree.sync()
            print("Slash commands synced!")
    except Exception as e:
        print(f"Error: {e}")



# /hello
@bot.tree.command(name='hello', description='‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢‡∏ö‡∏≠‡∏ó')
async def hello(interaction: discord.Interaction):
    await interaction.response.send_message(f'‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ {interaction.user.mention} ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ô‡πâ‡∏≤')



# /ping
@bot.tree.command(name='ping', description='‡πÄ‡∏ä‡πá‡∏Ñ‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó')
async def ping(interaction: discord.Interaction):
    latency = round(bot.latency * 1000) 
    await interaction.response.send_message(f'Pong! ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡πà‡∏ß‡∏á: {latency}ms')



# /info
@bot.tree.command(name='info', description='‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå')
async def info(interaction: discord.Interaction, target: discord.Member = None):
    if target is None:

        # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
        guild = interaction.guild
        embed = discord.Embed(title=f"Server Info: {guild.name}", color=0xffffff)
        embed.add_field(name="Server Name", value=guild.name, inline=False)
        embed.add_field(name="Server ID", value=guild.id, inline=False)
        embed.add_field(name="Member Count", value=guild.member_count, inline=False)
        await interaction.response.send_message(embed=embed)
    else:

        # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        user = target
        embed = discord.Embed(title=f"User Info: {user.name}", color=0xff0000)
        embed.set_thumbnail(url=user.display_avatar.url)
        embed.add_field(name="Username", value=user.name, inline=False)
        embed.add_field(name="User ID", value=user.id, inline=False)
        embed.add_field(name="Joined At", value=user.joined_at, inline=False)
        await interaction.response.send_message(embed=embed)



# /commands ‡πÇ‡∏ä‡∏ß‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
@bot.tree.command(name='commands', description='‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î')
async def show_commands(interaction: discord.Interaction):
    commands_list = ""
    for command in bot.tree.get_commands():
        commands_list += f"/{command.name}: {command.description}\n"
    
    await interaction.response.send_message(f"‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:\n{commands_list}")



# /ban ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ Role Admin ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
@bot.tree.command(name='ban', description='‡πÅ‡∏ö‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ')
@commands.has_role(ADMIN_ROLE)
async def ban(interaction: discord.Interaction, member: discord.Member, reason: str = None):
    if interaction.channel_id == int(CHANNEL_ID):
        if interaction.user.guild_permissions.ban_members:
            await member.ban(reason=reason)
            await interaction.response.send_message(f'{member.mention} ‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: {reason}')
        else:
            await interaction.response.send_message('‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏ö‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', ephemeral=True)
    else:
        await interaction.response.send_message('‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ', ephemeral=True)

# /clear ‡∏•‡∏ö‡∏Ñ‡∏≥
@bot.tree.command(name='clear', description='‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏')
@commands.has_role(ADMIN_ROLE)
async def clear(interaction: discord.Interaction, amount: int):
    if interaction.channel_id == int(CHANNEL_ID):
        if interaction.user.guild_permissions.manage_messages:
            if amount <= 0:
                await interaction.response.send_message('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0', ephemeral=True)
                return
            elif amount > 100:
                await interaction.response.send_message('‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 100 ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≤‡∏ß‡πÄ‡∏î‡∏µ‡∏¢‡∏ß', ephemeral=True)
                return

            await interaction.response.defer(ephemeral=True)
            
            channel = interaction.channel
            deleted = await channel.purge(limit=amount)

            await interaction.followup.send(f'‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° {len(deleted)} ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', ephemeral=True)
        else:
            await interaction.response.send_message('‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°', ephemeral=True)
    else:
        await interaction.response.send_message('‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ', ephemeral=True)



# /shutdown ‡∏õ‡∏¥‡∏î‡∏ö‡∏≠‡∏ó‡πÄ‡∏â‡∏£‡∏≤‡∏∞‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á 
@bot.tree.command(name='shutdown', description='‡∏õ‡∏¥‡∏î‡∏ö‡∏≠‡∏ó (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á)')
async def shutdown(interaction: discord.Interaction):
    try:
        owner_role_id = int(OWNER_ROLE)
        if any(role.id == owner_role_id for role in interaction.user.roles):
            await interaction.response.send_message("Moxz OfflineüíÄ...")
            await bot.close()
        else:
            await interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
    except Exception as e:
        await interaction.response.send_message(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}")

server_on()

bot.run(TOKEN)